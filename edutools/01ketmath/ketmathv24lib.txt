//   240531  some keys, ctrL
//   220814  Delete
//   220720  key width
//   220718  lic,cpr
//   220412
//   211112
//   211020
//   210923
//   210619
//   210910

Shift=0;
keytype=1;
capflg=0;
greflg=0;
boldflg=0;
vecflg=0;

nch=2;
ch=2;
StrL=apply(1..nch,"");
StrpL=apply(1..nch,"");
startflg=1;
initflg=1;
DrwL=[];
dpos=[10,14];

Str="";
Strp="";
Strnq="";
Strnow="";
Strt="";
npos=0;


//nt=4;
px=15;
dtpy=3.2;
tposL=apply(1..4,[px+0.5,17.4-(#-1)*dtpy]);

//Setwindow([-20,65],[-17,15]);

//nameL=Keyname();
//Keytable(0,dxL,4,32.5,poskey,[1,1,0],nameL,[0,-0.5],22);

//Keytable(5,43,1,34.5,[46,3.4],0.9*[1,1,1],[],[0,-0.5],20);
//actL1=["BS","CL","AC","PS","PL"];
//forall(1..5,drawtext([47+(#-1)*4.3,4.2],actL1_#,size->20));
//Keytable(2,27,1,30,[46,0],0.9*[1,1,1]);
//actL2=["$<\!<$","$<$"];
//forall(1..2,drawtext([46.1+(#-1)*3,1],actL2_#,size->20));
//Keytable(2,27,1,30,[62,0],0.9*[1,1,1],[],[0,-0.5],20);
//actL3=["$>$","$>\!>$"];
//forall(1..2,drawtext([62.5+(#-1)*2.5,1],actL3_#,size->20));

poskey=[19.5,-17.67];
dxL=apply(10..19,42);
//dxL_4=42; dxL_5=42;
dxL2=apply(1..9,42);
dxL3=[42,42];

Adddrw(str):=(
  DrwL=append(DrwL,[dpos,str,18]);
  dpos=dpos-[0,2];
);

 // no ketjs on 
Seteditable(1,["","Size=24","Width=535"]);
Seteditable(2,["","Size=24","Width=535"]);
Seteditable(3,["","Size=24","Width=535"]);
px=15;
posyL=[22.3,-2.2,-34];
Text1.xy=[px+1,posyL_1-1];
Text2.xy=[px+1,posyL_2-1];
Text3.xy=[px+1,posyL_3-1];
Text7.xy=[px-2,posyL_1-0.6];
Text8.xy=[px-2,posyL_2-0.6];
inspect(T1,"ptsize",6);
inspect(T2,"ptsize",6);
inspect(T3,"ptsize",6);
inspect(T4,"ptsize",6);
// no ketjs off

CtrkeyL=[
  [["Un","AC","PS","PL"]], //240510
  [["Cap"],["Gre"],["Txt"],["Vec"]],
  [["Cal"],["Lin"],[""]],
  [["TeX"]],
  [["AC","$<\!\!\!\!\!-\!\!-$",
      "$-\!\!-\!\!\!\!\!>$","DL","OK"]] //240514
];


Keyname():=(
  regional(nL,nL2,nL3,tmp1);
  nL=[
    ["a","b","c","sin","sq",")","7","8","9","＋"],
    ["x","y","z","cos","fr",",","4","5","6","ー"],
    ["r","s","t","tan","tfr","(","1","2","3","＊","'"],
    ["w","_","=","log","ln","^","0",".","sp","／"]
  ];
  nL2=[
    ["°","＠","[","]","|","d","e","f","g","lim","pi"],
    ["$\times$","!","{","}","$\neq$","h","i","j","k","int","$\infty$"],
    ["dot",":",";","$\leq$","$\geq","l","m","n","o","'","cs"],
    ["\","$\pm$","$\mp$","<",">","p","q","u","v","sum","tx"]
  ];
  
  if(Shift==1,
    nL2_3_11="$d$"; nL2_4_10="$[.]_{}^{}$"; nL2_4_11="$\partial$";
  );
  if(Shift==2,
    nL2_1_10="mat"; nL2_2_10="det"; nL2_4_11="$\circ$";
  );

  if(keytype==2,
    tmp1=["A","B","C"]; forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=["D","E","F","G"]; forall(1..4,nL2_1_(#+5)=tmp1_#);
    tmp1=["X","Y","Z"]; forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=["H","I","J","K"]; forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=["R","S","T"]; forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=["L","M","N","O"]; forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=["W"]; forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=["P","Q","U","V"]; forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==3,
    tmp1=["$\alpha$","$\beta$","$\gamma$"];
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=["$\Delta$","$\delta$","$\varepsilon$","$\varphi$"];
    forall(1..4,nL2_1_(#+5)=tmp1_#);
    tmp1=["$\kappa$","$\iota$","$\zeta$"];
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=["$\Theta$","$\theta$","$\chi$","$\xi$"];
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=["$\rho$","$\sigma$","$\tau$"];
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=["$\lambda","$\mu$","$\nu$","$\omega$"];
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=["$\Omega$"];
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=["$\Psi$","$\psi$","$\Phi$","$\Lambda$"];
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==4,
    tmp1=apply(["a","b","c"],"$\text{"+#+"}$");
    forall(1..3,nL2_1_(#)=tmp1_#);
    tmp1=apply(["d","e","f","g"],"$\text{"+#+"}$");
    forall(1..4,nL2_1_(#+5)=tmp1_(#));
    tmp1=apply(["x","y","z"],"$\text{"+#+"}$");
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=apply(["h","i","j","k"],"$\text{"+#+"}$");
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=apply(["r","s","t"],"$\text{"+#+"}$");
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=apply(["l","m","n","o"],"$\text{"+#+"}$");
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=apply(["w"],"$\mathbf{"+#+"}$");
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=apply(["p","q","r","s"],"$\text{"+#+"}$");
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  if(keytype==5,
    tmp1=apply(["a","b","c"],"$\vec{"+#+"}$");
    forall(1..3,nL_1_(#)=tmp1_#);
    tmp1=apply(["d","e","f","g"],"$\vec{"+#+"}$");
    forall(1..4,nL2_1_(#+5)=tmp1_(#));
    tmp1=apply(["x","y","z"],"$\vec{"+#+"}$");
    forall(1..3,nL_2_(#)=tmp1_#);
    tmp1=apply(["h","i","j","k"],"$\vec{"+#+"}$");
    forall(1..4,nL2_2_(#+5)=tmp1_#);
    tmp1=apply(["r","s","t"],"$\vec{"+#+"}$");
    forall(1..3,nL_3_(#)=tmp1_#);
    tmp1=apply(["l","m","n","o"],"$\vec{"+#+"}$");
    forall(1..4,nL2_3_(#+5)=tmp1_#);
    tmp1=apply(["w"],"$\vec{"+#+"}$");
    forall(1..1,nL_4_(#)=tmp1_#);
    tmp1=apply(["p","q","r","s"],"$\vec{"+#+"}$");
    forall(1..4,nL2_4_(#+5)=tmp1_#);
  );
  [nL,nL2];
);

///////
Manifun=["Allclear()","Undo()","Delete()","Push()",
  "Pull()","Left()","Right()","LLeft()","RRight()"];

Undo():=(
  regional(preL,pre,tmp,tmp1,tmp2,tmp3);
  if(ch==2,
    if(length(StrLL)==1,
      Str="";
      StrLL=[Str];
	);
    if(length(StrLL)>1,
      Str=StrLL_(-2);
      StrLL=StrLL_(1..(length(StrLL)-1));
	);
    tmp=indexof(Str,"?");
    if(tmp>0,npos=tmp,npos=length(Str));
  );
  Strnow=Str;
  StrL_ch=Str;
  funflg=0;
);

Clearnow():=(
  regional(preL,pre,tmp,tmp1,tmp2,tmp3);
  //global ch,shL,nqu,Str,npos
  preL=["",""];
  pre=preL_ch;
  if(StrpL_ch=="",Str=pre,Str="");
  StrL_ch=Str;
  npos=length(Str);
  Subsedit(ch,Str);
  funflg=0;
);

Delete():=(
  regional(preL,pre,tmp,tmp1,tmp2,tmp3);
  //global ch,shL,nqu,Str,npos
  preL=["",""];
  pre=preL_ch;
  tmp=indexof(Str,"?");
  if(tmp>0,npos=tmp,npos=length(Str));
  if(length(Str)>length(pre),
    if(npos==length(Str),
      Str=substring(Str,0,npos-1);
    ,
      tmp1=substring(Str,0,npos-2);
      tmp2=substring(Str,npos-1,length(Str));
      Str=tmp1+tmp2;
    );
    Strnq=replace(Str,"?","");
    Strnow=Str;
    StrL_ch=Strnq;
    npos=npos-1;
  ,
//    Pull();
//    npos=length(StrL_ch);
//    Delete();
  );
  funflg=0;
);

Allclear():=(
  regional(preL,pre,tmp,tmp1,tmp2,tmp3);
  //global ch,shL,nqu,Str,npos
  preL=["",""];
  pre=preL_ch;
  Str=pre;
  Strp="";
  StrLL=[];
  StrL_ch=Str;
  StrpL_ch=Strp;
  npos=indexof(Str,"?");
  if(npos==0,npos=length(Str));
  funflg=0;
);

Clear():=( 
  Str="";
  Strnq=Str;
  StrL_ch=Str;
  npos=0;
  funflg=0;
);

Push():=(
  regional(tmp,tmp1);
  tmp1=StrL_ch;
  tmp=indexof(tmp1,"//");
  if(tmp==0,
    StrpL_ch=StrpL_ch+tmp1+"//";
    Str="";
    npos=0;
  ,
    StrpL_ch=StrpL_ch+substring(tmp1,0,tmp+1);
    Str=substring(tmp1,tmp+1,length(tmp1));
    npos=max([0,npos-(tmp+1)]);
  );
  StrL_ch=Str;
  Strnq=Str;
  funflg=0;
);

Pull():=(
  regional(tmp,tmp1,tmp2);
  tmp1=StrpL_ch;
  tmp=indexall(tmp1,"//");
  if(length(tmp)>1,tmp=tmp_(-2)+1,tmp=0);
  tmp2=substring(tmp1,0,tmp);
  StrpL_ch=tmp2;
  tmp1=substring(tmp1,tmp,length(tmp1));
  Str=tmp1+StrL_ch;
  Strnq=Str;
  StrL_ch=Str;
  npos=length(tmp1)+npos;
  funflg=0;
);

Left():=(
  regional(preL,pre,tmp,tmp1,tmp2,tmp3);
  //global ch,shL,nqu,Str,npos
  tmp=substring(shL_nqu,0,shminL_nqu);
  preL=["",""];
  pre=preL_ch;
  if(length(Str)>length(pre),
    tmp=indexof(Str,"?");
    if(tmp>length(pre)+1,
      tmp1=substring(Str,0,tmp-2)+"?";
      tmp2=substring(Str,tmp-2,tmp-1);
      tmp3=substring(Str,tmp,length(Str));
      Str=tmp1+tmp2+tmp3;
      npos=length(tmp1+"?");
    );
    if(tmp==0,
      tmp1=substring(Str,0,length(Str)-1)+"?";
      tmp3=substring(Str,length(Str)-1,length(Str));
      Str=tmp1+tmp3;  
      npos=length(tmp1);
    );
    StrL_ch=Str;
  );
  funflg=0;
);

Right():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  if(length(Str)>0,
    tmp=indexof(Str,"?");
    if(tmp>0,
      if(tmp<length(Str)-1,
        tmp1=substring(Str,0,tmp-1);
        tmp2=substring(Str,tmp,tmp+1)+"?";
        tmp3=substring(Str,tmp+1,length(Str));
        Str=tmp1+tmp2+tmp3;
        Str=replace(Str,"??","?"); //240725
        npos=length(tmp1+"?");
      );
      if(tmp==length(Str)-1,
        tmp1=substring(Str,0,tmp-1);
        tmp3=substring(Str,tmp,length(Str));
        Str=tmp1+tmp3;
        npos=length(Str);
      );
    );
    StrL_ch=Str;
	Subsedit(ch,Str);
  );
  funflg=0;
);

LLeft():=(
  regional(preL,pre,tmp,tmp1,tmp2,tmp3);
  //global ch,shL,nqu,Str,npos
  tmp=substring(shL_nqu,0,shminL_nqu);
  preL=["",""];
  pre=preL_ch;
  tmp=replace(Str,"?","");
  if(length(tmp)>length(pre),
    tmp=substring(tmp,length(pre),length(tmp));
    Str=pre+"?"+tmp;
    npos=length(pre)+1;
    StrL_ch=Str;
	Subsedit(ch,Str);
  );
  funflg=0;
);

RRight():=(
  regional(tmp,tmp1,tmp2,tmp3);
  //global Str,npos
  if(length(Str)>0,
    Str=replace(Str,"?","");
    npos=length(Str);
    StrL_ch=Str;
	Subsedit(ch,Str);
  );
  funflg=0;
);

//no ketjs on
rLL1=[30..39,40..49,50..59,60..69];
rLL2=[70..80,81..91,92..102,103..113];
sLL1=
[
 [
  ["La","A","{\alpha}","\text{a}","{\vec{a}\;}"],
  ["Lb","B","{\beta}","\text{b}","{\vec{b}\;}"],
  ["Lc","C","{\gamma}","\text{c}","{\vec{c}\;}"],
  "sin(?)","sq(?)",")","n7","n8","n9","+"
 ],
 [
  ["Lx","X","{\kappa}","\text{x}","{\vec{x}\;}"],
  ["Ly","Y","{\iota}","\text{y}","{\vec{y}\;}"],
  ["Lz","Z","{\eta}","\text{z}","{\vec{z}\;}"],
  "cos(?)","fr(?,?)",",","n4","n5","n6","-"
 ],
 [
  ["Lr","R","{\rho}","\text{r}","{\vec{r}\;}"],
  ["Ls","S","{\sigma}","\text{s}","\vec{s}\;"],
  ["Lt","T","{\tau}","\text{t}","{\vec{t}\;}"],
  "tan(?)","tfr(?,?)","(","n1","n2","n3","*"
 ],
 [
   ["Lw","W","{\omega}","\text{w}","{\vec{w}\;}"],
  "_(?)","=","log(?)","ln(?)","^(?)","n0",".","(sp)","/"
 ]
];
sLL2=
[
 [
  "(deg)","@","[","]","|",
  ["Ld","D","{\Delta}","\text{d}","{\vec{d}\;}"],
  ["Le","E","{\delta}","\text{e}","{\vec{e}\;}"],
  ["Lf","F","{\varepsilon}","\text{f}","{\vec{f}\;}"],
  ["Lg","G","{\varphi}","\text{g}","{\vec{g}\;}"],
  [0,"lim(?)",1,"lim(?)",2,"mat(?)"],
  "pi"
 ],
 [
  "(cross)","!","{","}","(neq)",
  ["Lh","H","{\Theta}","\text{h}","{\vec{h}\;}"],
  ["Li","I","{\theta}","\text{i}","{\vec{i}\;}"],
  ["Lj","J","{\chi}","\text{j}","{\vec{j}\;}"],
  ["Lk","K","{\xi}","\text{k}","{\vec{k}\;}"],
  [0,"int(",1,"int(",2,"det("],
  [0,"(inf)",1,"(inf)",2,"det("],
  "(inf)"
 ],
 [
  "dot(?)",":",";","(leq)","(geq)",
  ["Ll","L","{\lambda}","\text{l}","{\vec{l}\;}"],
  ["Lm","M","{\mu}","\text{m}","{\vec{m}\;}"],
  ["Ln","N","{\nu}","\text{n}","{\vec{n}\;}"],
  ["Lo","O","{\omega}","\text{o}","{\vec{o}\;}"],
  "'",
  [1,"diff(?,)",2,"case(?)",0,"case(?)"]
 ],
 [
  "\","(pm)","(mp)","<",">",
  ["Lp","P","{\Psi}","\text{p}","{\vec{p}\;}"],
  ["Lq","Q","{\psi}","\text{q}","{\vec{q}\;}"],
  ["Lu","U","{\Phi}","\text{u}","{\vec{u}\;}"],
  ["Lv","V","{\lambda}","\text{v}","{\vec{v}\;}"],
  [1,"br(?)",2,"sum(?)",0,"sum(?)"],
  [0,"tx(?)",1,"par(?)",2,"(circ)"]
 ]
];

Makescript(sLL):=(
  regional(pre,pre1,nr,nc,scr,out,
       tmp,tmp1,tmp2,tmp3);
  pre="funflg=1;";
  pre1=pre+"name=";
  out=sLL;
  forall(1..(length(sLL)),nr,
    forall(1..(length(sLL_1)),nc,
      scr=sLL_nr_nc;
      if(islist(scr),
        if(isstring(scr_1),
          tmp=apply(scr,Dqq(#));
          tmp1=pre1+tmp+"_keytype;";
        ,
          tmp1="";
          forall(1..(length(scr)/2),
            tmp2=scr_(2*#-1);
            tmp3=scr_(2*#);
            tmp1=tmp1+"if(Shift=="+tmp2+",name=";
            tmp1=tmp1+Dqq(tmp3)+");";
          );
          tmp1=pre+tmp1;
        );
      ,
        tmp1=pre1+Dqq(scr)+";";
      );
      out_nr_nc=tmp1;
    );
  );
  out;
);

Settext(sLLorg,rLLorg,yinit):=(
  regional(sLL,rLL,nr,nc,txn,pos);
  sLL=Makescript(sLLorg);
  rLL=rLLorg;
  forall(1..(length(sLL)),nr,
    forall(1..(length(sLL_1)),nc,
      txn=rLL_nr_nc;
      pos=[20.4+4.3*(nc-1),yinit-3.3*(nr-1)];
      Settextkey(txn,pos,"　　",sLL_nr_nc,14);
    );
  );
);

Settext(sLL1,rLL1,-6.7);
Settext(sLL2,rLL2,-20.6);

tmp1="　　";
tmp=Text30.xy-[4.3,0];
tmp2=[
  "if(keytype!=2,keytype=2,keytype=1);",
  "if(keytype!=3,keytype=3,keytype=1);",
  "if(keytype!=4,keytype=4,keytype=1);",
  "if(keytype!=5,keytype=5,keytype=1);"
];
forall(1..4,
  Settextkey(10+#,tmp+[-1,-(#-1)*3.3],tmp1,tmp2_(#),14);
);
tmp=Text103.xy-[4.3,0];
Settextkey(18,tmp,tmp1,"texflg=1;",14);

tmp=Text39.xy+[4.3,0];
tmp2=[
  "if(Shift!=1,Shift=1,Shift=0);",
  "if(Shift!=2,Shift=2,Shift=0);"
];
forall(1..2,
  Settextkey(15+#,tmp+[0,-(#-1)*3.3],tmp1,tmp2_(#),14);
);
//tmp=Text103.xy;
tmp=Text35.xy;
tmp=Text30.xy-[4.3,0];
tmp2=[
  "Allclear()","Left()","Right()","Delete()","RRight()",
  "Undo()","Allclear()","Push()","Pull()",
];
tmp2=apply(tmp2,"funflg=1;name="+Dqq(#)+";");
tmp=Text11.xy; //240423from
Settextkey(200,[tmp_1,0.9],tmp1,tmp2_1,13);
Settextkey(201,[tmp_1+4.3,0.95],tmp1,tmp2_2,13);
Settextkey(202,[tmp_1+2*4.3,0.95],tmp1,tmp2_3,13);
Settextkey(203,[tmp_1+3*4.3,0.95],tmp1,tmp2_4,13);
Settextkey(205,[tmp_1+4*4.3,0.95],tmp1,tmp2_5,13);
tmp=Text35.xy;
Settextkey(204,[tmp_1,0.95],tmp1,tmp2_(6),13);
Settextkey(206,[tmp_1+1*4.3,0.95],tmp1,tmp2_(7),13);
Settextkey(207,[tmp_1+2*4.3,0.95],tmp1,tmp2_(8),13);
Settextkey(208,[tmp_1+3*4.3,0.95],tmp1,tmp2_(9),13);
tmp=[Op(1,Text16.xy)-0.5.4,0.95];
Settextkey(20,tmp,"　　　","startflg=1;",13);


stmp1="ch=1;Putpoint("+Dqq("J")+",posredL_1);";
stmp2="ch=2;Putpoint("+Dqq("J")+",posredL_2);";
Settextkey(7,[12.8,21.5],"1",stmp1,20);
Settextkey(8,[12.8,-2.9],"2",stmp2,20);


//no ketjs off